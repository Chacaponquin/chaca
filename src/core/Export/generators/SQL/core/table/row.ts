import { ColumnName } from "../generators/names";
import { SQLDatatype } from "../sql-types";
import { SQLColumn } from "./column";

interface AddValueProps {
  name: ColumnName;
  isKey: boolean;
  isNull: boolean;
  value: SQLDatatype;
  autoGenerated: boolean;
}

export class SQLRow {
  columns: SQLColumn[];

  constructor() {
    this.columns = [];
  }

  add(column: SQLColumn) {
    this.columns.push(column);
  }

  values(): SQLDatatype[] {
    return this.columns.map((c) => c.value());
  }

  keys(): SQLColumn[] {
    return this.columns.filter((c) => c.isKey());
  }

  notAutoGeneratedColumns(): SQLColumn[] {
    return this.columns.filter((c) => !c.autoGenerated);
  }

  addValue({ isKey, isNull, name, value, autoGenerated }: AddValueProps): void {
    const found = this.columns.find((c) => c.equal(name));

    if (found) {
      found.setValue(value);
    } else {
      const column = new SQLColumn({
        autoGenerated: autoGenerated,
        isKey: isKey,
        isNull: isNull,
        datatype: value,
        name: name,
      });

      this.add(column);
    }
  }
}
